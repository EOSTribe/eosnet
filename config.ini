# Track only transactions whose scopes involve the listed accounts. Default is to track all transactions.
# filter_on_accounts =

# Limits the maximum time (in milliseconds) processing a single get_transactions call.
get-transactions-time-limit = 3

# File to read Genesis State from
genesis-json=/opt/eos/build/programs/eosiod/data-dir/genesis_dawn3.json

# override the initial timestamp in the Genesis State file
# genesis-timestamp =

# the location of the block log (absolute path or relative to application data dir)
block-log-dir = "blocks"

# Sets the block interval in seconds.
block-interval-seconds = 1

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint =

# Limits the maximum time (in milliseconds) that is allowed a transaction's code to execute from a received block.
rcvd-block-trans-execution-time = 72

# Limits the maximum time (in milliseconds) that is allowed a pushed transaction's code to execute.
trans-execution-time = 18

# Limits the maximum time (in milliseconds) that is allowed a transaction's code to execute while creating a block.
create-block-trans-execution-time = 18

# The time frame, in seconds, that the per-authorized-account-transaction-msg-rate-limit is imposed over.
per-authorized-account-transaction-msg-rate-limit-time-frame-sec = 18

# Limits the maximum rate of transaction messages that an account is allowed each per-authorized-account-transaction-msg-rate-limit-time-frame-sec.
per-authorized-account-transaction-msg-rate-limit = 1800

# The time frame, in seconds, that the per-code-account-transaction-msg-rate-limit is imposed over.
per-code-account-transaction-msg-rate-limit-time-frame-sec = 18

# Limits the maximum rate of transaction messages that an account's code is allowed each per-code-account-transaction-msg-rate-limit-time-frame-sec.
per-code-account-transaction-msg-rate-limit = 18000

# Limits the maximum database storage that an account's code is allowed.
per-code-account-max-storage-db-limit-mbytes = 5

# The overhead to apply per row for approximating total database storage.
row-overhead-db-limit-bytes = 32

# The maximum depth the pending transaction queue will be allowed to reach till new pushed transactions are rejected.
pending-txn-depth-limit = 1000

# The maximum allowed for generating a block before subsequent transactions get put back on the pending transaction queue.
gen-block-time-limit-msec = 200

# open the database in read only mode
readonly = 0

# the location of the chain shared memory files (absolute path or relative to application data dir)
shared-file-dir = "blockchain"

# Minimum size MB of database shared memory file
shared-file-size = 8192

# Time to wait, in milliseconds, between creating next faucet created account.
#faucet-create-interval-ms = 1000

# Name to use as creator for faucet created accounts.
#faucet-name = faucet

# [public key, WIF private key] for signing for faucet creator account
#faucet-private-key = ["EOS6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV","5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3"]

# The local IP and port to listen for incoming http connections.
http-server-address = 0.0.0.0:8800

# Specify the Access-Control-Allow-Origin to be returned on each request.
access-control-allow-origin = *

# Specify the Access-Control-Allow-Headers to be returned on each request.
access-control-allow-headers = Content-Type

# Specify if Access-Control-Allow-Credentials: true should be returned on each request.
access-control-allow-credentials = true

# The actual host:port used to listen for incoming p2p connections.
p2p-listen-endpoint = 0.0.0.0:6600

# An externally accessible host:port for identifying this node. Defaults to p2p-listen-endpoint.
p2p-server-address = <your domain>:6600

# The public endpoint of a peer node to connect to. Use multiple p2p-peer-address options as needed to compose a network.
p2p-peer-address = eosslc.com:9876
p2p-peer-address = 94.254.62.124:6600
p2p-peer-address = eosio.ru:6600
p2p-peer-address = 156.38.160.91:6600 
p2p-peer-address = eosnet.eosnewyork.io:9875
p2p-peer-address = bp3-d3.eos42.io:9876
p2p-peer-address = eosnettestnet.cryptolions.io:9897
p2p-peer-address = eosnet.eosdetroit.com:6600
p2p-peer-address = 54.233.222.22:6600
p2p-peer-address = ceos.blockmaker.io:6600
p2p-peer-address = node-1.bpnode.com:6878
p2p-peer-address = eosnet-bp1.eosphere.io:6600
p2p-peer-address = 13.209.19.204:6600
p2p-peer-address = 54.37.139.93:9876
p2p-peer-address = eosbrazil.com:9877
p2p-peer-address = 18.188.133.163:6600
p2p-peer-address = 120.197.96.14:6600
p2p-peer-address = testnet1.eosdr.io:6600
p2p-peer-address = testnet01.eoseoul.com:6600
p2p-peer-address = 47.75.16.85:6600

# The name supplied to identify this node amongst the peers.
agent-name = "<Your name>"

# Can be 'any' or 'producers' or 'specified' or 'none'. If 'specified', peer-key must be specified at least once. If only 'producers', peer-key is not required. 'producers' and 'specified' may be combined.
allowed-connection = any

# Optional public key of peer allowed to connect.  May be used multiple times.
# peer-key =

# Tuple of [PublicKey, WIF private key] (may specify multiple times)
# peer-private-key =

# Log level: one of 'all', 'debug', 'info', 'warn', 'error', or 'off'
log-level-net-plugin = info

# Maximum number of clients from which connections are accepted, use 0 for no limit
max-clients = 25

# number of seconds to wait before cleaning up dead connections
connection-cleanup-period = 30

# True to require exact match of peer network version.
network-version-match = 0

# number of blocks to retrieve in a chunk from any individual peer during synchronization
sync-fetch-span = 100

# Enable block production, even if the chain is stale.
# enable-stale-production = false

# Percent of producers (0-99) that must be participating in order to produce blocks
required-participation = false

# ID of producer controlled by this node (e.g. inita; may specify multiple times)
# producer-name =

# Tuple of [public key, WIF private key] (may specify multiple times)
producer-name = <prod-name>
private-key = ["<owner_public_key>","<owner_private_key>"]


# Plugin(s) to enable, may be specified multiple times
# plugin =
plugin = eosio::chain_plugin
plugin = eosio::chain_api_plugin
plugin = eosio::producer_plugin
plugin = eosio::http_plugin
